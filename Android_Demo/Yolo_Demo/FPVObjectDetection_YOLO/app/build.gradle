plugins {
    id 'com.android.application'
    id 'de.undercouch.download'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.fpvobjectdetection"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        resConfigs "en", "pt"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "FPVObjectDetection.apk"
        }
    }

    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    flavorDimensions "tfliteInference"
    productFlavors {
        // The TFLite inference is built using the TFLite Java interpreter.
        interpreter {
            dimension "tfliteInference"
        }
        // Default: The TFLite inference is built using the TFLite Task library (high-level API).
        taskApi {
            getIsDefault().set(true)
            dimension "tfliteInference"
        }
    }
    compileSdkVersion 33
    buildToolsVersion '33'
    useLibrary 'org.apache.http.legacy'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from:'download_model.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    //interpreterImplementation project(":lib_interpreter")
    //taskApiImplementation project(":lib_task_api")

    implementation 'org.tensorflow:tensorflow-lite:2.3.0' //samsung tablet->2.3
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.3.0' //samsung tablet->2.3

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    //implementation 'com.google.android.exoplayer:exoplayer:2.13.3'
    implementation 'com.google.android.exoplayer:exoplayer:2.18.4'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.google.http-client:google-http-client-android:+'
    implementation 'com.google.api-client:google-api-client-android:+'
    implementation 'com.google.api-client:google-api-client-gson:+'
    // required to avoid crash on Android 12 API 31
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'com.github.bumptech.glide:glide:4.15.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.0'
}